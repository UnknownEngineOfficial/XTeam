name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  # Backend Linting and Testing
  backend-lint-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: xteam
          POSTGRES_PASSWORD: xteam_password
          POSTGRES_DB: xteam_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        cd backend
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install ruff black mypy pytest pytest-asyncio pytest-cov
    
    - name: Lint with ruff
      run: |
        cd backend
        ruff check app/ --fix
      continue-on-error: true
    
    - name: Format check with black
      run: |
        cd backend
        black --check app/
      continue-on-error: true
    
    - name: Type check with mypy
      run: |
        cd backend
        mypy app/
      continue-on-error: true
    
    - name: Run tests with pytest
      env:
        DATABASE_URL: postgresql+asyncpg://xteam:xteam_password@localhost:5432/xteam_test
        REDIS_URL: redis://localhost:6379/0
        SECRET_KEY: test-secret-key-for-ci
        ENVIRONMENT: test
      run: |
        cd backend
        pytest tests/ -v --cov=app --cov-report=xml --cov-report=term-missing
      continue-on-error: true
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        files: ./backend/coverage.xml
        flags: backend
      continue-on-error: true

  # Frontend Linting and Testing
  frontend-lint-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Lint
      run: |
        cd frontend
        npm run lint
      continue-on-error: true
    
    - name: Type check
      run: |
        cd frontend
        npm run build
    
    - name: Build
      run: |
        cd frontend
        npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist
        retention-days: 7

  # Docker Build Test
  docker-build:
    runs-on: ubuntu-latest
    needs: [backend-lint-test, frontend-lint-test]
    permissions:
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/backend.Dockerfile
        push: false
        tags: xteam-backend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/frontend.Dockerfile
        push: false
        tags: xteam-frontend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
